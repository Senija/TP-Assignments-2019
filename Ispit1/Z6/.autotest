{
    "id": 5693,
    "name": "Tehnike programiranja (2019\/2020), Ispit 1, Zadatak 6",
    "language": "C++",
    "preferred_compiler": "g++",
    "required_compiler": "g++",
    "compiler_features": [],
    "compiler_options": "-std=c++11 -O1 -Wall -Wuninitialized -Winit-self -Wfloat-equal -Wno-sign-compare -Werror=implicit-function-declaration -Werror=vla -pedantic -lm -pass-exit-codes",
    "compiler_options_debug": "-std=c++11 -ggdb -lm -pass-exit-codes",
    "profile": "true",
    "debug": "true",
    "test": "true",
    "compile": "true",
    "run": "false",
    "test_specifications": [
        {
            "id": 13,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "\/\/AT1\n\n_main();",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": "821 1413 19 144 176 81 1112\n"
            },
            "expected": [
                "Unesi 3 elementa skupa: Unesi 4 elementa vektora: Novi skup: 9 10 11\\nNovi vektor: 9 14 9 5\\n"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "true",
            "regex": "false",
            "substring": "true"
        },
        {
            "id": 14,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "\/\/AT2\n\n_main();",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": "82 413 9 44 76 8 112\n"
            },
            "expected": [
                "Unesi 3 elementa skupa: Unesi 4 elementa vektora: Novi skup: 8 9 10\\nNovi vektor: 8 13 8 4\\n"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "true",
            "regex": "false",
            "substring": "true"
        },
        {
            "id": 15,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "    \/\/AT3\n    std::list<int> lista{3, 6, 1, 4, 2};\n    auto funkcija = [] (int i) {return (i-1);};\n    std::list<int> rezultujuca = Mapiraj(lista, funkcija);\n    for (auto i : rezultujuca)\n    {\n        std::cout << i << \" \";\n    }",
            "global_above_main": "#include <list>",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "2 5 0 3 1 "
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "true",
            "regex": "false",
            "substring": "true"
        },
        {
            "id": 16,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "    \/\/AT4\n    std::list<double> lista{3.1, 6.2, 1.1, 4.4, 2.2};\n    auto funkcija = [] (double i) {return (i+1);};\n    std::list<double> rezultujuca = Mapiraj(lista, funkcija);\n    for (auto i : rezultujuca)\n    {\n        std::cout << i << \" \";\n    }",
            "global_above_main": "#include <list>",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "4.1 7.2 2.1 5.4 3.2 "
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "true",
            "regex": "false",
            "substring": "true"
        },
        {
            "id": 17,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "    \/\/AT5\n    std::vector<std::string> lista{\"riba\", \"ribi\", \"grize\"};\n    auto funkcija = [] (std::string i) {return (i + \"rrr\");};\n    std::vector<std::string> rezultujuca = Mapiraj(lista, funkcija);\n    \n    for (auto i : rezultujuca)\n    {\n        std::cout << i << \" \";\n    }\n    ",
            "global_above_main": "#include <string>",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "ribarrr ribirrr grizerrr"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "true",
            "regex": "false",
            "substring": "true"
        }
    ]
}